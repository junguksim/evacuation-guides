{"version":3,"sources":["lotteEvacuationGuides.ts","actions/actionTypes.ts","components/Guide.tsx","actions/GuideActions.ts","components/GuideListFloatButton.tsx","components/GuideList.tsx","components/Home.tsx","components/GuideDetail.tsx","App.tsx","reducers/guide.ts","reducers/reducer.ts","store.ts","index.tsx"],"names":["lotteEvacuationGuides","imageSrc","imageAlt","title","SET_SELECTED_GUIDE_ID","SET_SELECTED_GUIDE_IMAGE_SRC","Guide","dispatch","useDispatch","navigate","useNavigate","className","onClick","guideId","guideImageSrc","imageFileId","split","type","payload","alt","src","AWS","require","GuideListFloatButton","s3","S3","accessKeyId","secretAccessKey","downloadImage","url","a","urlArray","key","params","Bucket","Key","Promise","resolve","getObject","err","data","blob","Blob","Body","ContentType","then","actualDownload","link","document","createElement","href","window","URL","createObjectURL","download","click","xmlns","width","height","viewBox","d","GuideList","map","evacuationGuide","Home","to","GuideDetail","selectedGuideImageSrc","useSelector","state","guide","App","path","element","initialState","placeId","selectedGuideId","action","combineReducers","middleware","thunk","store","createStore","reducer","applyMiddleware","ReactDOM","render","basename","process","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.53c8f4d0.chunk.js","sourcesContent":["import { GuideProps } from './components/Guide';\n\nexport const lotteEvacuationGuides : GuideProps[] = [\n    {\n        imageSrc: \"https://evacuation-guides.s3.ap-northeast-2.amazonaws.com/211101180337.jpg\",\n        imageAlt : \"B1\",\n        title: \"B1층\"\n    },\n    {\n        imageSrc: \"https://evacuation-guides.s3.ap-northeast-2.amazonaws.com/211101180343.jpg\",\n        imageAlt : \"1층\",\n        title: \"1층\"\n    },\n    {\n        imageSrc: \"https://evacuation-guides.s3.ap-northeast-2.amazonaws.com/211101180358.jpg\",\n        imageAlt : \"2층\",\n        title: \"2층\"\n    },\n    {\n        imageSrc: \"https://evacuation-guides.s3.ap-northeast-2.amazonaws.com/211101180410.jpg\",\n        imageAlt : \"3층\",\n        title: \"3층\"\n    },\n    {\n        imageSrc: \"https://evacuation-guides.s3.ap-northeast-2.amazonaws.com/211101180424.jpg\",\n        imageAlt : \"4층\",\n        title: \"4층\"\n    },\n    {\n        imageSrc: \"https://evacuation-guides.s3.ap-northeast-2.amazonaws.com/211101180439.jpg\",\n        imageAlt : \"5층\",\n        title: \"5층\"\n    },\n    {\n        imageSrc: \"https://evacuation-guides.s3.ap-northeast-2.amazonaws.com/211101180449.jpg\",\n        imageAlt : \"6층\",\n        title: \"6층\"\n    },\n    {\n        imageSrc: \"https://evacuation-guides.s3.ap-northeast-2.amazonaws.com/211101180502.jpg\",\n        imageAlt : \"7층\",\n        title: \"7층\"\n    },\n    {\n        imageSrc: \"https://evacuation-guides.s3.ap-northeast-2.amazonaws.com/211101180524.jpg\",\n        imageAlt : \"8층\",\n        title: \"8층\"\n    },\n    {\n        imageSrc: \"https://evacuation-guides.s3.ap-northeast-2.amazonaws.com/211101180538.jpg\",\n        imageAlt : \"9층\",\n        title: \"9층\"\n    },\n]","export interface ReduxAction {\n    type: string;\n    payload: any;\n}\nexport const SET_PLACE_ID = \"SET_PLACE_ID\";\nexport const SET_SELECTED_GUIDE_ID = \"SET_SELECTED_GUIDE_ID\"\nexport const SET_SELECTED_GUIDE_IMAGE_SRC = \"SET_SELECTED_GUIDE_IMAGE_SRC\"","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport { setSelectedGuideId, setSelectedGuideImageSrc } from '../actions/GuideActions';\nimport \"./Guide.css\";\n\nexport interface GuideProps {\n    imageSrc: string;\n    imageAlt: string;\n    title: string;\n}\nconst Guide = ({ imageSrc, imageAlt, title }: GuideProps) => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    return <div className=\"guide-wrapper\" onClick={() => {\n        const imageFileName = imageSrc.split(\".com/\")[1];\n        const imageFileId = imageFileName.split(\".jpg\")[0];\n        dispatch(setSelectedGuideId(imageFileId));\n        dispatch(setSelectedGuideImageSrc(imageSrc));\n        navigate(`./${imageFileId}`);\n    }}>\n        <img alt={imageAlt} src={imageSrc} className={`guide-thumbnail`}></img>\n        <h3>{title}</h3>\n    </div>\n}\n\nexport default Guide;","import { Dispatch } from 'redux'\nimport { ReduxAction, SET_SELECTED_GUIDE_ID, SET_SELECTED_GUIDE_IMAGE_SRC } from './actionTypes'\n\nexport const setSelectedGuideId = (guideId: string) => (dispatch : Dispatch<ReduxAction>) => {\n    dispatch({\n        type: SET_SELECTED_GUIDE_ID,\n        payload : guideId\n    })\n}\n\nexport const setSelectedGuideImageSrc = (guideImageSrc: string) => (dispatch : Dispatch<ReduxAction>) => {\n    dispatch({\n        type: SET_SELECTED_GUIDE_IMAGE_SRC,\n        payload : guideImageSrc\n    })\n}","import React from 'react';\nimport { lotteEvacuationGuides } from '../lotteEvacuationGuides';\n\nconst AWS = require('aws-sdk')\n\nconst GuideListFloatButton = () => {\n    const s3 = new AWS.S3(\n        {\n            accessKeyId: \"AKIAZRSRA5DE4KP4XMCR\",\n            secretAccessKey: \"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\"\n        })\n    \n    let downloadImage = async (url: string,) => {\n        let urlArray = url.split(\"/\")\n        let key = urlArray[3]        \n        let params = {Bucket: \"evacuation-guides\", Key: key}\n        return new Promise((resolve) => {\n            s3.getObject(params, (err: any, data: any) => {\n                let blob = new Blob([data.Body], { type: data.ContentType });\n                resolve(blob);\n            })\n        }).then((blob : any) => {\n            return blob;\n        })\n    }\n    \n    const actualDownload = async (blob : Blob,  title : string) => {\n        let link=document.createElement('a');\n        link.href=window.URL.createObjectURL(blob);\n        link.download= title;\n        link.click();\n    }\n    \n    const onClick = async () => {\n        for (const {imageSrc, title} of lotteEvacuationGuides) {\n            const blob = await downloadImage(imageSrc);\n            await actualDownload(blob, title);\n        }\n    }\n\n    return <div className={`guide-list-float-button`} onClick={onClick}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"35\" height=\"35\" viewBox=\"0 0 20 20\">\n        <title>\n        download\n        </title>\n        <path d=\"M17 12v5H3v-5H1v5a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-5z\"/>\n        <path d=\"M10 15l5-6h-4V1H9v8H5l5 6z\"/>\n        </svg>\n\n    </div>\n}\n\nexport default GuideListFloatButton;","\n\nimport React from \"react\";\nimport { lotteEvacuationGuides } from '../lotteEvacuationGuides';\nimport Guide, { GuideProps } from './Guide';\nimport \"./GuideList.css\"\nimport GuideListFloatButton from './GuideListFloatButton';\n\nconst GuideList = () => {\n    return <div className={`guide-list`}>\n        <GuideListFloatButton />\n        {lotteEvacuationGuides.map((evacuationGuide) => {\n            return <Guide {...evacuationGuide}/>\n        })}\n    </div>\n}\n\nexport default GuideList;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n    return <>\n        <h1>안녕하세요!!</h1>\n        <Link to={'1/guides'}>롯데백화점 피난안내도</Link>\n    </>\n}\n\nexport default Home;","import React from \"react\";\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../store';\nimport \"./GuideDetail.css\"\n\nconst GuideDetail = () => {\n    const selectedGuideImageSrc = useSelector((state: RootState) => state.guide.selectedGuideImageSrc)\n\n    return <div className={`guide-detail-wrapper`}>\n        <img className={`guide-detail-image`} src={selectedGuideImageSrc as string} alt={``} ></img>\n    </div>\n}\n\nexport default GuideDetail;","import React from 'react';\nimport './App.css';\nimport GuideList from './components/GuideList';\nimport Home from './components/Home';\nimport {  Route, Routes } from 'react-router-dom';\nimport GuideDetail from './components/GuideDetail';\n\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=':placeId/guides' element={<GuideList />} />\n      <Route path=':placeId/guides/:guideDetailId' element={<GuideDetail />} />\n    </Routes>\n  );\n} \n\nexport default App;\n","import { ReduxAction, SET_SELECTED_GUIDE_ID, SET_SELECTED_GUIDE_IMAGE_SRC } from '../actions/actionTypes'\n\nexport interface GuideState {\n    placeId: null | string;\n    selectedGuideId: null | string;\n    selectedGuideImageSrc: null | string;\n}\nconst initialState: GuideState = {\n    placeId : null,\n    selectedGuideId: null,\n    selectedGuideImageSrc : null\n}\n\nconst guide = (state = initialState, action : ReduxAction) : GuideState =>  {\n    switch (action.type) {\n        case SET_SELECTED_GUIDE_ID:\n            return {\n                ...state,\n                selectedGuideId : action.payload\n            }\n        case SET_SELECTED_GUIDE_IMAGE_SRC:\n            return {\n                ...state,\n                selectedGuideImageSrc : action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default guide;","import { combineReducers } from \"redux\";\n\nimport guide from './guide';\n\n\nexport default combineReducers({\n  guide\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { GuideState } from './reducers/guide';\nimport reducer from \"./reducers/reducer\";\n\nexport interface RootState {\n    guide : GuideState\n}\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, applyMiddleware(...middleware));\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <React.StrictMode>\n        <App/>\n      </React.StrictMode>\n      </Provider>\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
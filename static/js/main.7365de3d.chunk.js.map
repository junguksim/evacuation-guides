{"version":3,"sources":["actions/actionTypes.ts","actions/GuideActions.ts","firebase.js","components/Guide.tsx","components/Loading.tsx","components/GuideList.tsx","components/Home.tsx","components/GuideDetail.tsx","App.tsx","reducers/guide.ts","reducers/reducer.ts","store.ts","index.tsx"],"names":["SET_SELECTED_GUIDE_NAME","SET_SELECTED_GUIDE_IMAGE_SRC","SET_GUIDES","setSelectedGuideName","guideName","dispatch","type","payload","setSelectedGuideImageSrc","guideImageSrc","setGuides","guides","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getStorage","a","storage","GuideLayout","styled","div","GuideThumbnail","img","TouchScreenImage","Guide","imageSrc","imageAlt","name","useDispatch","navigate","useNavigate","onClick","alt","src","process","LoadingPageLayout","LoadingStatement","h2","Loading","GuideListLayout","GuideList","useSelector","state","guide","setGuidesInfo","useCallback","guideInfos","placeRef","ref","listAll","placeGuidesList","items","guideRef","getDownloadURL","push","useEffect","length","map","evacuationGuide","index","key","Home","to","GuideDetailLayout","GuideEmergencyWrapper","GuideDetailImage","EmergencyInformationImage","SososimLayout","SososimImage","GuideDetail","selectedGuideName","selectedGuideImageSrc","getImageSrc","locationSplit","window","location","href","split","App","path","element","initialState","placeId","action","combineReducers","middleware","thunk","store","createStore","reducer","applyMiddleware","ReactDOM","render","basename","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7365de3d.chunk.js","sourcesContent":["export interface ReduxAction {\n    type: string;\n    payload: any;\n}\nexport const SET_PLACE_ID = \"SET_PLACE_ID\";\nexport const SET_SELECTED_GUIDE_NAME = \"SET_SELECTED_GUIDE_NAME\"\nexport const SET_SELECTED_GUIDE_IMAGE_SRC = \"SET_SELECTED_GUIDE_IMAGE_SRC\"\nexport const SET_GUIDES = \"SET_GUIDES\"","import { Dispatch } from 'redux'\nimport { GuideInfo } from '../reducers/guide'\nimport { ReduxAction, SET_GUIDES, SET_SELECTED_GUIDE_NAME, SET_SELECTED_GUIDE_IMAGE_SRC } from './actionTypes'\n\nexport const setSelectedGuideName = (guideName: string) => (dispatch : Dispatch<ReduxAction>) => {\n    dispatch({\n        type: SET_SELECTED_GUIDE_NAME,\n        payload : guideName\n    })\n}\n\nexport const setSelectedGuideImageSrc = (guideImageSrc: string) => (dispatch : Dispatch<ReduxAction>) => {\n    dispatch({\n        type: SET_SELECTED_GUIDE_IMAGE_SRC,\n        payload : guideImageSrc\n    })\n}\n\nexport const setGuides = (guides : GuideInfo[]) =>  (dispatch : Dispatch<ReduxAction>) => {\n    dispatch({\n        type: SET_GUIDES,\n        payload : guides\n    })\n}","import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDWHnNufmc858biN3yTb8VKSu_aEKLGHFI\",\n  authDomain: \"evacuation-guides.firebaseapp.com\",\n  projectId: \"evacuation-guides\",\n  storageBucket: \"evacuation-guides.appspot.com\",\n  messagingSenderId: \"390791888073\",\n  appId: \"1:390791888073:web:f9138cd658af7851172118\",\n  measurementId: \"G-2JTPYZWB9C\",\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport const downloadGuideImageByFloor = async (floor) => {\n  const storage = firebase.storage();\n  const pathReference = storage.ref(`1/${floor}.jpg`);\n  const url = await pathReference.getDownloadURL();\n\n  const xhr = new XMLHttpRequest();\n  xhr.responseType = \"blob\";\n  xhr.onload = (event) => {\n    var blob = xhr.response;\n  };\n  xhr.open(\"GET\", url);\n  xhr.send();\n};\n\nexport const getStorage = async () => {\n  const storage = firebase.storage();\n\n  return storage;\n};\n\nexport const downloadAllGuidesImage = async () => {\n  const storage = firebase.storage();\n  const storageRef = storage.ref();\n\n  const list = await storageRef.listAll();\n  list.items.forEach(async (imageRef) => {\n    const url = await imageRef.getDownloadURL();\n    const xhr = new XMLHttpRequest();\n    xhr.responseType = \"blob\";\n    xhr.onload = (event) => {\n      var blob = xhr.response;\n    };\n    xhr.open(\"GET\", url);\n    xhr.send();\n  });\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport styled from 'styled-components';\nimport { setSelectedGuideName, setSelectedGuideImageSrc } from '../actions/GuideActions';\nimport { GuideInfo } from '../reducers/guide';\n\nconst Guide = ({ imageSrc, imageAlt, name }: GuideInfo) => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    return <GuideLayout onClick={() => {\n        dispatch(setSelectedGuideName(name));\n        dispatch(setSelectedGuideImageSrc(imageSrc));\n        navigate(`./${name}`);\n    }}>\n        <GuideThumbnail alt={imageAlt} src={imageSrc}></GuideThumbnail>\n        <TouchScreenImage alt={\"\"} src={process.env.PUBLIC_URL + \"/touch_screen.png\"}/>\n    </GuideLayout>\n}\n\nconst GuideLayout = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    border: 2px solid black;\n    border-radius: 15px;\n    padding: 5px;\n    margin: 6px;\n    cursor: pointer;\n\n    @media only screen and (min-width : 600px) {\n        display: flex;\n        flex-direction: column;\n        width : 50%;\n        height : 60%;\n    }\n`\n\nconst GuideThumbnail = styled.img`\n    width: 90%;\n    height: 80%;\n`\n\nconst TouchScreenImage = styled.img`\n    width: 70%;\n    height: 70%;\n`\n\nexport default Guide;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Loading = () => {\n    return <LoadingPageLayout>\n        <LoadingStatement>불러오는 중입니다...</LoadingStatement>\n    </LoadingPageLayout>\n}\nconst LoadingPageLayout = styled.div`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n`\n\nconst LoadingStatement = styled.h2`\n    display: flex;\n`\n\n\nexport default Loading;","\n\nimport React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setGuides } from '../actions/GuideActions';\nimport { getStorage } from '../firebase';\nimport { GuideInfo } from '../reducers/guide';\nimport { RootState } from '../store';\nimport Guide from './Guide';\nimport Loading from './Loading';\nimport styled from 'styled-components';\n\nconst GuideList = () => {\n    const dispatch = useDispatch();\n    const { guides } = useSelector((state: RootState) => state.guide)\n\n    const setGuidesInfo = useCallback(async () => {\n        const guideInfos: GuideInfo[] = [];\n        const storage = await getStorage();\n        const placeRef = storage.ref(`1`);\n        const placeGuidesList = (await placeRef.listAll()).items;\n        for (const guideRef of placeGuidesList) {\n            const imageSrc = await guideRef.getDownloadURL();\n            guideInfos.push({\n                imageSrc,\n                imageAlt: '',\n                name : guideRef.name\n            })\n        }\n        dispatch(setGuides(guideInfos));\n    }, [dispatch])\n\n    useEffect(() => {\n        setGuidesInfo();\n    }, [setGuidesInfo])\n\n    return <GuideListLayout>\n        {(!guides || guides.length === 0) && <Loading /> }\n        {guides && guides.length > 0 && guides.map((evacuationGuide, index) => {\n            return <Guide {...evacuationGuide} key={index}/>\n        })}\n    </GuideListLayout>\n}\n\nconst GuideListLayout = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height : 100%;\n    width: 100%;\n`\n\nexport default GuideList;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n    return <>\n        <h1>안녕하세요!!</h1>\n        <Link to={'1/guides'}>롯데백화점 피난안내도</Link>\n    </>\n}\n\nexport default Home;","import React, { useEffect } from \"react\";\nimport { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { setSelectedGuideImageSrc, setSelectedGuideName } from '../actions/GuideActions';\nimport { getStorage } from '../firebase';\nimport { RootState } from '../store';\n\nconst GuideDetail = () => {\n    const dispatch = useDispatch();\n    const {selectedGuideName, selectedGuideImageSrc} = useSelector((state: RootState) => state.guide)\n    \n    const getImageSrc = useCallback(async () => {\n        const storage = await getStorage();\n        if (selectedGuideName) {\n            const imageSrc = await storage.ref(`1/${selectedGuideName}`).getDownloadURL();\n            dispatch(setSelectedGuideImageSrc(imageSrc));\n        }\n    }, [dispatch, selectedGuideName])\n\n    useEffect(() => {\n        const locationSplit = window.location.href.split(\"/\");\n        dispatch(setSelectedGuideName(locationSplit[locationSplit.length - 1]));\n        getImageSrc();\n    }, [getImageSrc, selectedGuideName, dispatch])\n\n    return <GuideDetailLayout>\n        <GuideEmergencyWrapper>\n            {selectedGuideImageSrc && <GuideDetailImage src={selectedGuideImageSrc} alt={``} ></GuideDetailImage>}\n            <EmergencyInformationImage src={process.env.PUBLIC_URL +`/emergency_information.png`} alt={``} ></EmergencyInformationImage>\n        </GuideEmergencyWrapper>\n        <SososimLayout>\n            <SososimImage src={process.env.PUBLIC_URL + `/extinguisher.png`} alt={``} />\n            <SososimImage src={process.env.PUBLIC_URL + `/fireplug.png`} alt={``} />\n            <SososimImage src={process.env.PUBLIC_URL + `/cpr.png`} alt={``} />\n            <h3>포항북부소방서와 롯데백화점 포항점은 함께 합니다.</h3>\n        </SososimLayout>\n    </GuideDetailLayout>\n}\n\nconst GuideDetailLayout = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n\n    @media only screen and (max-width : 600px) {\n        display: flex;\n        flex-direction: column;\n    }\n`\n\nconst GuideEmergencyWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap : 10px;\n\n    @media only screen and (max-width : 600px) {\n        display: flex;\n        height: 100%;\n    }\n`\n\nconst GuideDetailImage = styled.img`\n    @media only screen and (max-width : 600px) {\n        display: flex;\n        width: 100%;\n    }\n`\n\nconst EmergencyInformationImage = styled.img`\n    @media only screen and (max-width : 600px) {\n        display: flex;\n        width: 100%;\n        height: 10%\n    }\n`\n\nconst SososimLayout = styled.div`\n    @media only screen and (max-width : 600px) {\n        width: 100%;\n        display: flex;\n        align-items: center;\n        flex-direction: column;\n    }\n`\n\nconst SososimImage = styled.img`\n    width: 60%;\n    height: 60%;\n    @media only screen and (max-width : 600px) {\n        width: 100%;\n        height: 100%;\n    }\n`\n\nexport default GuideDetail;","import React from 'react';\nimport './App.css';\nimport GuideList from './components/GuideList';\nimport Home from './components/Home';\nimport {  Route, Routes } from 'react-router-dom';\nimport GuideDetail from './components/GuideDetail';\n\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=':placeId/guides' element={<GuideList />} />\n      <Route path=':placeId/guides/:guideDetailId' element={<GuideDetail />} />\n    </Routes>\n  );\n} \n\nexport default App;\n","import { ReduxAction, SET_GUIDES, SET_SELECTED_GUIDE_NAME, SET_SELECTED_GUIDE_IMAGE_SRC } from '../actions/actionTypes'\n\nexport interface GuideInfo {\n    imageSrc: string;\n    imageAlt: string;\n    name: string;\n}\nexport interface GuideState {\n    placeId: null | string;\n    selectedGuideName: null | string;\n    selectedGuideImageSrc: null | string;\n    guides: null | GuideInfo[];\n}\nconst initialState: GuideState = {\n    placeId : null,\n    selectedGuideName: null,\n    selectedGuideImageSrc: null,\n    guides : null,\n}\n\nconst guide = (state = initialState, action : ReduxAction) : GuideState =>  {\n    switch (action.type) {\n        case SET_SELECTED_GUIDE_NAME:\n            return {\n                ...state,\n                selectedGuideName : action.payload\n            }\n        case SET_SELECTED_GUIDE_IMAGE_SRC:\n            return {\n                ...state,\n                selectedGuideImageSrc : action.payload\n            }\n        case SET_GUIDES:\n            return {\n                ...state,\n                guides : action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default guide;","import { combineReducers } from \"redux\";\n\nimport guide from './guide';\n\n\nexport default combineReducers({\n  guide\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { GuideState } from './reducers/guide';\nimport reducer from \"./reducers/reducer\";\n\nexport interface RootState {\n    guide : GuideState\n}\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, applyMiddleware(...middleware));\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <React.StrictMode>\n        <App/>\n      </React.StrictMode>\n      </Provider>\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}